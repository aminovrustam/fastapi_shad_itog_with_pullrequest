# Набор тестов для эндпоинтов которые можно запустить
# в VSCode с помощью плагина  REST Client
# Найти можно по идентификатору: humao.rest-client
# Tunder Client не позволяет свободно импортировать-экспортировать записи,
# поэтому перешел на этот плагин. Он тоже хорош :-)


###

# Создаем продавца
POST http://localhost:8000/api/v1/sellers/ HTTP/1.1
content-type: application/json

{
    "first_name": "Rustam",
    "last_name": "Aminov",
    "email": "ru123@mail.com",
    "password": "kskfls"
}


###

# Получаем список продавцов
GET http://localhost:8000/api/v1/sellers/ HTTP/1.1


###

# Получаем продавца со списком книг
GET http://localhost:8000/api/v1/sellers/1 HTTP/1.1


###

# Обновляем поля в данных о продавце
PUT http://localhost:8000/api/v1/sellers/2 HTTP/1.1
content-type: application/json

{
    "id": 0,
    "first_name": "Dmitriy",
    "last_name": "Nazarov",
    "email": "DFS2@gmail.com",
    "password": "usuzdcmf"
}


###

# Удаляем продавца
DELETE http://localhost:8000/api/v1/sellers/1 HTTP/1.1
content-type: application/json


###

# Создаем книгу
POST http://localhost:8000/api/v1/books/ HTTP/1.1
Content-Type: application/json

{
    "title": "Mziri",
    "author": "Lermontov",
    "pages": 300,
    "year": 2025,
    "seller_id": 2
}


###

# Получаем список книг
GET http://localhost:8000/api/v1/books/ HTTP/1.1


###

# Получаем одну книгу по ее ИД
GET http://localhost:8000/api/v1/books/1 HTTP/1.1


###

# Удаляем книгу
DELETE http://localhost:8000/api/v1/books/1 HTTP/1.1

###

# Обновляем поля в данных о книге
PUT http://localhost:8000/api/v1/books/2 HTTP/1.1
Content-Type: application/json

{
    "id": 0,
    "title": "Clean Code",
    "author": "Robert Martin",
    "year": 2010,
    "pages": 310,
    "seller_id": 2
}

###